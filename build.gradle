plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'co.sj'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
		// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'
	// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	// https://mvnrepository.com/artifact/com.github.scribejava/scribejava-core
	compile group: 'com.github.scribejava', name: 'scribejava-core', version: '2.8.1'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
	// https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1
	compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
	    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.9'
	// https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1') // MyBatis 라이브러리
      //mariadb
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
    
    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
	compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.2.0.RELEASE'

	//querydsl
	def querydslVersion = "4.1.4"
    implementation ("com.querydsl:querydsl-core:$querydslVersion")
    implementation ("com.querydsl:querydsl-apt:$querydslVersion")
    implementation ("com.querydsl:querydsl-jpa:$querydslVersion")
    
    //imgscalr-lib
    implementation 'org.imgscalr:imgscalr-lib:4.2'
    //file upload related io 파일 바이트코드로 바꾸기[IOUtils]
    implementation 'commons-io:commons-io:2.6'
    //UNDERTOW
    //implementation 'org.springframework.boot:spring-boot-starter-undertow'
    //BCRYPT
    implementation 'org.mindrot:jbcrypt:0.4'
     //spring-security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //WEBSOCKET
    //implementation 'org.springframework.boot:spring-boot-starter-websocket'
    //imgscalr-lib
    implementation 'org.imgscalr:imgscalr-lib:4.2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	    // AWS S3
    compile group: 'org.springframework.cloud', name: 'spring-cloud-aws', version: '2.2.1.RELEASE', ext: 'pom'
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
}

test {
	useJUnitPlatform()
}

// querydsl 적용
def querydslSrcDir = "$buildDir/generated"

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}